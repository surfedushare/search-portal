variables:
  FF_NETWORK_PER_BUILD: 1
  FF_USE_FASTZIP: "true"
  ARTIFACT_COMPRESSION_LEVEL: "fast"
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: qwerty
  POSTGRES_HOST_AUTH_METHOD: trust
  POSTGRES_VERSION: "12.2"
  OPEN_SEARCH_VERSION: "1.2.0"
  APPLICATION_CONTEXT: unprivileged
  APPLICATION_MODE: localhost
  POL_POSTGRES_USER: $POSTGRES_USER
  POL_SECRETS_POSTGRES_PASSWORD: $POSTGRES_PASSWORD
  DOCKER_AUTH_CONFIG: "{\"credHelpers\": {\"017973353230.dkr.ecr.eu-central-1.amazonaws.com\": \"ecr-login\"}}"
  AWS_DEFAULT_REGION: eu-central-1
  AWS_CONTAINER_REGISTRY: 017973353230.dkr.ecr.eu-central-1.amazonaws.com
  DOCKER_HOST: tcp://docker:2376

image: $AWS_CONTAINER_REGISTRY/gitlab-runner:latest

stages:
  - lint-and-test
  - build
  - integration-test
  - promote-and-deploy

.setup-repository:
  before_script:
    - invoke aws.sync-repository-state --no-profile
    - invoke prepare-builds --commit $CI_COMMIT_SHA

lint-job:
  stage: lint-and-test
  script:
    - flake8 .
    - cd portal
    - npm run lint

service-test-job:
  stage: lint-and-test
  services:
    - name: postgres:$POSTGRES_VERSION-alpine
    - name: opensearchproject/opensearch:$OPEN_SEARCH_VERSION
      alias: opensearch
      command: ["bash", "-c", "env 'discovery.type=single-node' 'cluster.name=opensearch' ./opensearch-docker-entrypoint.sh"]
  variables:
    OPENSEARCH_JAVA_OPTS: "-Xms512m -Xmx512m"
    DISABLE_INSTALL_DEMO_CONFIG: "true"
    DISABLE_SECURITY_PLUGIN: "true"
  script:
    - APPLICATION_PROJECT=edusources invoke test.service
    - APPLICATION_PROJECT=nppo invoke test.service

build-job:
  stage: build
  rules:
    - if: $CI_COMMIT_BRANCH == "edusources" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "edusources"
      when: always
    - if: $CI_COMMIT_BRANCH == "acceptance" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "acceptance"
      when: always
    - if: $CI_COMMIT_BRANCH == "development"
      when: manual
  extends: .setup-repository
  services:
    - name: docker:20.10-dind
  script:
    - invoke aws.build service --commit $CI_COMMIT_SHA
    - invoke aws.build harvester --commit $CI_COMMIT_SHA --docker-login
    - invoke aws.push harvester --commit $CI_COMMIT_SHA --push-latest
    - invoke aws.push service --commit $CI_COMMIT_SHA --push-latest

integration-test-job:
  stage: integration-test
  rules:
    - if: $CI_COMMIT_BRANCH == "edusources" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "edusources"
      when: always
    - if: $CI_COMMIT_BRANCH == "acceptance" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "acceptance"
      when: always
  services:
    - name: $AWS_CONTAINER_REGISTRY/harvester:$CI_COMMIT_SHA
      alias: harvester
    - name: $AWS_CONTAINER_REGISTRY/search-portal:$CI_COMMIT_SHA
      alias: service
    - name: postgres:$POSTGRES_VERSION-alpine
    - name: opensearchproject/opensearch:$OPEN_SEARCH_VERSION
      alias: opensearch
      command: ["bash", "-c", "env 'discovery.type=single-node' 'cluster.name=opensearch' ./opensearch-docker-entrypoint.sh"]
  variables:
    OPENSEARCH_JAVA_OPTS: "-Xms512m -Xmx512m"
    DISABLE_INSTALL_DEMO_CONFIG: "true"
    DISABLE_SECURITY_PLUGIN: "true"
    POL_OPEN_SEARCH_ENABLE_DECOMPOUND_ANALYZERS: 0
  before_script:
    - invoke srv.setup-postgres --host postgres
    - invoke hrv.setup-postgres --host postgres
    - invoke srv.recreate-test-indices
  script:
    - APPLICATION_PROJECT=edusources invoke test.e2e
  artifacts:
    when: always
    paths:
      - portal/tests/e2e/videos/**/*.mp4
      - portal/tests/e2e/screenshots/**/*.png
    expire_in: 1 day

promote-production:
  stage: promote-and-deploy
  rules:
    - if: $CI_COMMIT_BRANCH == "edusources"
      when: manual
  environment:
    name: production
    url: https://edusources.nl
  services:
    - name: docker:dind
  variables:
    APPLICATION_MODE: production
  script:
    - invoke aws.promote service --commit $CI_COMMIT_SHA

promote-acceptance:
  stage: promote-and-deploy
  rules:
    - if: $CI_COMMIT_BRANCH == "acceptance"
      when: manual
  environment:
    name: acceptance
    url: https://acc.surfedushare.nl
  services:
    - name: docker:dind
  variables:
    APPLICATION_MODE: acceptance
  script:
    - invoke aws.promote service --commit $CI_COMMIT_SHA

promote-development:
  stage: promote-and-deploy
  rules:
    - if: $CI_COMMIT_BRANCH == "development"
      when: manual
  environment:
    name: development
    url: https://dev.surfedushare.nl
  services:
    - name: docker:dind
  variables:
    APPLICATION_MODE: development
  script:
    - invoke aws.promote service --commit $CI_COMMIT_SHA

include:
  - template: Security/SAST.gitlab-ci.yml

sast:
  stage: lint-and-test
  artifacts:
    name: sast
    paths:
      - gl-sast-report.json
    reports:
      sast: gl-sast-report.json
    when: always
