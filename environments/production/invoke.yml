# NB: This file is committed in a public repo. DO NOT COMMIT REAL SECRETS!
# It uses AWS Secret Manager to lookup any secrets at application bootstrap


django:
  debug: false
  postgres_user: "django"
  postgres_host: "surfpol-dev-edushare.c85na2fjlzol.eu-central-1.rds.amazonaws.com"
  protocol: "https"
  backend_domain: "zoekportaalback.surf.nl"
  frontend_domain: "zoekportaal.surf.nl"

admin:
  allowed_ip_ranges: ["194.171.28.0/27", "194.171.16.0/27", "195.169.127.0/24", "195.169.126.0/23", "145.90.230.0/23", "145.101.60.0/23"]

surfconext:
  voot_api_endpoint: "https://voot.surfconext.nl"
  client_id: "https@//zoekportaal.surf.nl/"

search:
  client: "elastic"

elastic_search:
  username: "search_portal_backend_prod"
  host: "elastic2.search-prod.surfcatalog.nl"
  protocol: "https"

edurep:
  soap_supplier_id: null
  xml_api_endpoint: "http://wszoeken.edurep.kennisnet.nl:8000"
  soap_api_endpoint: "http://smb.edurep.kennisnet.nl/smdBroker/ws"
  json_api_endpoint: "https://proxy.edurep.nl/v3/search"

secrets:
  django:
    secret_key: "arn:aws:secretsmanager"
  postgres:
    password: "arn:aws:secretsmanager"
  surfconext:
    secret_key: "arn:aws:secretsmanager"
  elastic_search:
    password: "arn:aws:secretsmanager"

# The legacy mechanism to be able to override postgres credentials during migrations
# Keeping this around for now until we move to AWS Secrets Manager fully
postgres:
  credentials: null
